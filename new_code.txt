#include <iostream>
#include <string>
#include <stack>
#include <sstream>
using namespace std;
int evaluateExpression(string expression) {
    stack<char> operators;
    stack<int> operands;
    stringstream ss(expression);
    string current;
    while (ss.good()) { // Continue reading until the end of the stream
        char c = ss.get();
        if (isdigit(c)) {
            current += c; // Build the number string
        } else if (c == '+' || c == '-' || c == '*' || c == '/' || c == '(' || c == ')') {
            if (!current.empty()) { // Push the built number if it's not empty
                operands.push(stoi(current));
                current.clear(); // Clear the number string
            }
            operators.push(c);
        }
    }
    if (!current.empty()) { // Push the last number
        operands.push(stoi(current));
    }
    while (!operators.empty()) {
        if (operators.top() == '(') {
            operators.pop();
            continue;
        }
        int b = operands.top();
        operands.pop();
        int a = operands.top();
        operands.pop();
        char op = operators.top();
        operators.pop();
        int result = 0;
        if (op == '*') {
            result = a * b;
        } else if (op == '-') {
            result = a - b;
        } else if (op == '+') {
            result = a + b;
        } else if (op == '/') {
            result = a / b;
        }
        operands.push(result);
    }
    return operands.top();
}
int main() {
    cout << "Введите выражение:" << endl;
    string input;
    getline(cin, input);
    int result = evaluateExpression(input);
    cout << "Результат: " << result << endl;
    return 0;
}
