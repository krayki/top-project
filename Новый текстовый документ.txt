#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <set>
#include <algorithm>

using namespace std;

//^,+,-,/,*

int main()
{
    cout << "Введите выражение:"<<endl;
    string p;
    getline(cin, p);
    string pr;
    for(int i=0; i<p.size();i++){
        if(p.at(i)==' '){
            continue;
        }
        else{
            pr+=p.at(i);
        }
    }
    string subs;
    int n, h;
        n=-1;
        h=0;
    for(int i=0;i<=pr.size();i++){
        if (pr.at(i)=='('){
            n=i;
        }
        if (pr.at(i)==')'){
            h=i;
            break;
        }
    }
    subs=pr.substr(n+1,h-n-1);
    cout << subs<<endl;
    while (subs.find('+')<=10000 || subs.find('-')<=10000 || subs.find('*')<=10000 || subs.find('/')<=10000 || subs.find('^')<=10000){
        while (subs.find('-')<=10000){
            int rpr;
            string l, r;
            int il, ir, sl, sr, ll, rr;
            for(int j=subs.find('-')-1; j>=0;j--){
                if (subs.at(j)=='^' || subs.at(j)=='-' || subs.at(j)=='/' || subs.at(j)=='*' || subs.at(j)=='+'){
                    il=j+1;
                    break;
                }
                il=j;
            }
            l=subs.substr(il,subs.find('-'));
            for(int j=subs.find('-')+1; j<subs.size();j++){
                if (subs.at(j)=='^' || subs.at(j)=='-' || subs.at(j)=='/' || subs.at(j)=='*' || subs.at(j)=='+'){
                    ir=j-1;
                    break;
                }
                ir=j;
            }
            r=subs.substr(subs.find('-')+1, ir);
            // cout << l << endl << r<<endl << stoi(l) << endl<<stoi(r);
            ll=stoi(l);
            rr=stoi(r);
            rpr=ll-rr;
            // rpr=stoi(l)-stoi(r);
            subs.replace(il,ir+1-il, to_string(rpr));
        }
        while (subs.find('+')<=10000){
            int rpr;
            string l, r;
            int il, ir, sl, sr;
            for(int j=subs.find('+')-1; j>=0;j--){
                if (subs.at(j)=='^' || subs.at(j)=='-' || subs.at(j)=='/' || subs.at(j)=='*' || subs.at(j)=='+'){
                    il=j+1;
                    break;
                }
                il=j;
            }
            l=subs.substr(il,subs.find('+'));
            for(int j=subs.find('+')+1; j<subs.size();j++){
                if (subs.at(j)=='^' || subs.at(j)=='-' || subs.at(j)=='/' || subs.at(j)=='*' || subs.at(j)=='+'){
                    ir=j-1;
                    break;
                }
                ir=j;
            }
            r=subs.substr(subs.find('+')+1, ir);
            // cout << l << endl << r;
            rpr=stoi(l)+stoi(r);
            subs.replace(il,ir+1-il, to_string(rpr));
        }
    }
    // cout << subs;
    return 0;
}
